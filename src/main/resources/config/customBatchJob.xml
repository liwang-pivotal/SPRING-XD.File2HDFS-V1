<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:batch="http://www.springframework.org/schema/batch"
	   xmlns:hadoop="http://www.springframework.org/schema/hadoop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="
	   		http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans.xsd 
	   		http://www.springframework.org/schema/batch 
	   		http://www.springframework.org/schema/batch/spring-batch.xsd
	   		http://www.springframework.org/schema/util 
	   		http://www.springframework.org/schema/util/spring-util.xsd
	   		http://www.springframework.org/schema/hadoop 
	   		http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
	   		http://www.springframework.org/schema/context 
	   		http://www.springframework.org/schema/context/spring-context.xsd">
	   		
	<context:property-placeholder properties-ref="myProperties" />
	
	<util:properties id="myProperties" >
		<prop key="hdfs.input.path">${HDFSDir}</prop>
		<prop key="hd.fs">${HDFSURI}</prop>
	</util:properties>

	<hadoop:configuration>
		fs.default.name=${hd.fs}
	</hadoop:configuration>

	<batch:job id="job">
		<batch:step id="import">
			<batch:tasklet ref="scriptTasklet" />
		</batch:step>
	</batch:job>
	
	<hadoop:script-tasklet id="scriptTasklet" script-ref="hdfsScript" scope="step"/>
	
	<hadoop:script id="hdfsScript" language="groovy" scope="step">
		<hadoop:property name="localSourceFile" value="file://${InputDir}"/>
		<hadoop:property name="hdfsInputDir" value="${hdfs.input.path}"/>
			if (!fsh.test(hdfsInputDir)) {
				fsh.mkdir(hdfsInputDir);
			}
            
            println localSourceFile;
            
            if (fsh.test(localSourceFile)) {
                list = fsh.ls(localSourceFile);
                list = list.drop(1);
            
                for (item in list) {
                    path = item.getPath().toString();
                    fsh.moveFromLocal(path,hdfsInputDir);
                }
            }
	</hadoop:script>
	
</beans>